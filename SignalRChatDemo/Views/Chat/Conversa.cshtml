@model ChatDemo.Data.Chat
@{
    ViewData["Title"] = "Conversa";
    Layout = null;
}

<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    html, body {
        height: 100%;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f3f4f6;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .main-container {
        display: flex;
        width: 95vw;
        height: 95vh;
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 6px 16px rgba(0,0,0,0.5);
    }

    .conversations-list {
        width: 300px;
        background-color: #4f46e5;
        color: white;
        display: flex;
        flex-direction: column;
    }

    .conversations-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        font-size: 20px;
        font-weight: bold;
        border-bottom: 1px solid rgba(255,255,255,0.2);
    }

    .logout-button {
        margin: 20px 0;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        background-color: #7C3AED;
        color: white;
        border: none;
        border-radius: 4px;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .logout-button:hover {
            background-color: #6D28D9;
        }

    .add-button {
        background-color: transparent;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: white;
    }

    .conversations-content {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        gap: 10px;
        overflow-y: auto;
    }

    .conversation-item {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        cursor: pointer;
        border-bottom: 1px solid rgba(255,255,255,0.1);
        transition: background-color 0.2s;
        gap: 12px;
    }

        .conversation-item:hover {
            background-color: rgba(255,255,255,0.1);
        }

    .avatar {
        width: 42px;
        height: 42px;
        border-radius: 50%;
        background-color: #c4b5fd;
        flex-shrink: 0;
    }

    .conversation-text {
        font-size: 16px;
        font-weight: 500;
        color: white;
    }

    .chat-container {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .chat-header {
        background-color: #6a11cb;
        color: white;
        padding: 20px;
        font-size: 24px;
    }

    .chat-messages {
        flex: 1;
        padding: 24px;
        overflow-y: auto;
        background-color: #ece5dd;
        font-size: 18px;
    }

    .message {
        max-width: 60%;
        margin-bottom: 14px;
        border-radius: 12px;
        clear: both;
    }

        .message.sent {
            background-color: #dcf8c6;
            margin-left: auto;
            text-align: right;
        }

        .message.received {
            background-color: white;
            margin-right: auto;
            text-align: left;
        }

    .chat-input {
        display: flex;
        border-top: 1px solid #ccc;
    }

        .chat-input input {
            flex: 1;
            border: none;
            padding: 18px;
            font-size: 18px;
        }

        .chat-input button {
            background-color: #6a11cb;
            color: white;
            border: none;
            padding: 0 30px;
            cursor: pointer;
            font-size: 18px;
        }

        .chat-input input:focus {
            outline: none;
        }

        .chat-input button:active {
            opacity: 0.85;
        }

        .typing-indicator {
            font-size: 12px;
            color: gray;
            display: block;
            margin-top: 2px;
        }

        a {
            text-decoration: none;
        }

</style>

<div class="main-container">
    <div class="conversations-list">
        <div class="conversations-header">
            <div>Conversas</div>
            <button class="add-button">+</button>
        </div>

        <!-- Carrega a lista de contatos -->
        @await Html.PartialAsync("_ContactsList", Model.Contacts)

        <button id="btnLogout" class="logout-button">Logout</button>
    </div>

    <div class="chat-container">
        <!-- Carrega área do chat -->
        @await Html.PartialAsync("_ChatArea", Model)
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    $(document).ready(function(){
        $("#btnLogout").click(function(){
             $.ajax({
             url: "/Login/LogOut",
             success: function (response) {
                 window.location.href = response.redirectUrl;
                },
             });
         });
    });

    let webIdContact = "";
    let typingTimeout;

    function selecionarContato(webId, myNumberId) {
       $.ajax({
           url: '/Chat/ContatoSelecionado',
           type: 'POST',
               contentType: 'application/json',
           data: JSON.stringify({ WebId: webId, MyNumberId: myNumberId }),
           success: function (html) {
               webIdContact = webId;
               $('.chat-container').html(html);
               }
       });
    }

    

    // SignalR
    let userLogged = @Html.Raw(Json.Serialize(Model.UserLogged.Name));
    userLogged = userLogged + ";" + @Html.Raw(Json.Serialize(Model.UserLogged.WebId));

     const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub?userName=" + encodeURIComponent(userLogged))
        .build();

    connection.start()
        .then(function () {            
            $(document).on('input', '#chatInput', function() {
                const userSelected = webIdContact;

                connection.invoke("Typing", userLogged, userSelected).catch(function (err) {
                    return console.error(err.toString());
                });
            });

        
            connection.on("UserTyping", function(userSel) {
                $("#typing-indicator").text("digitando...");
                $("#typing-indicator-" + userSel).text("digitando...");

                clearTimeout(typingTimeout);

                typingTimeout = setTimeout(function() {
                    $("#typing-indicator").text("");
                    $("#typing-indicator-" + userSel).text("");
                  }, 2000);
            });

        })
        .catch(function (err) {
            return console.error(err.toString());
        });
</script>
