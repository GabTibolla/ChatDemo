@model ChatDemo.Data.Chat
@{
    ViewData["Title"] = "Conversa";
    Layout = null;
}

<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    html, body {
        height: 100%;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f3f4f6;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .main-container {
        display: flex;
        width: 95vw;
        height: 95vh;
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 6px 16px rgba(0,0,0,0.5);
    }

    .conversations-list {
        width: 300px;
        background-color: #4f46e5;
        color: white;
        display: flex;
        flex-direction: column;
    }

    .conversations-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        font-size: 20px;
        font-weight: bold;
        border-bottom: 1px solid rgba(255,255,255,0.2);
    }

    .logout-button {
        margin: 20px 0;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        background-color: #7C3AED;
        color: white;
        border: none;
        border-radius: 4px;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .logout-button:hover {
            background-color: #6D28D9;
        }

    .add-button {
        background-color: transparent;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: white;
    }

    .chat-container {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    a {
        text-decoration: none;
    }

    .custom-modal {
        background-color: white;
        border-radius: 12px;
        padding: 24px;
        width: 100%;
        max-width: 360px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
        font-family: Arial, sans-serif;
    }

    .modal-alert {
        padding: 12px 16px;
        border-radius: 6px;
        background-color: #dbeafe; /* azul claro */
        color: #1e40af; /* azul escuro */
        font-weight: 500;
        border: 1px solid #93c5fd;
        margin-bottom: 16px;
        font-family: Arial, sans-serif;
    }


    .modal-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .modal-title {
        font-size: 22px;
        margin-bottom: 16px;
        color: #4f46e5;
        text-align: center;
    }

    .modal-form {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .modal-input {
        padding: 10px 14px;
        border: 1px solid #ccc;
        border-radius: 8px;
        font-size: 16px;
        width: 100%;
    }

    .modal-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .modal-save {
        background-color: #4f46e5;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .modal-save:hover {
            background-color: #4338ca;
        }

    .modal-cancel {
        background-color: #e5e7eb;
        color: #1f2937;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .modal-cancel:hover {
            background-color: #d1d5db;
        }

        .conversas {
             flex-grow: 1;
        display: flex;
        flex-direction: column;
        gap: 10px;
        overflow-y: auto;
        }
</style>

<div class="main-container">
    <div class="conversations-list">
        <div class="conversations-header">
            <div>Conversas</div>
            <button id="addButton" class="add-button">+</button>
        </div>

        <div class="conversas">
            <!-- Carrega a lista de contatos -->
            @await Html.PartialAsync("_ContactsList", Model)
        </div>

        <button id="btnLogout" class="logout-button">Logout</button>
    </div>

    <div class="chat-container">
        <!-- Carrega área do chat -->
        @await Html.PartialAsync("_ChatArea", Model)
    </div>


</div>

<!-- Modal de Adicionar Usuário -->
<div id="addUserModal" class="modal-overlay" style="display: none;">
    <div class="modal custom-modal">
        <h2 class="modal-title">Adicionar Usuário</h2>

        <form asp-action="AddUser" asp-controller="Chat" method="post" class="modal-form">
            @if (ViewBag.Error != null)
            {
                <div class="modal-alert">@ViewBag.Error</div>
            }
            <label for="Name">Nome:</label>
            <input type="text" name="Name" class="modal-input" />

            <label for="NumberId">Número ID:</label>
            <input type="text" maxlength="8" name="NumberId" class="modal-input" required />
            <input type="text" maxlength="8" name="MyNumberId" value="@Model.UserLogged.NumberId" style="display: none;" class="modal-input" required />

            <div class="modal-actions">
                <button type="submit" class="modal-save">Salvar</button>
                <button type="button" onclick="closeModal()" class="modal-cancel">Cancelar</button>
            </div>
        </form>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    $(document).ready(function () {
        var shouldOpenModal = '@(ViewBag.OpenModal ?? false)' === 'True';

        if (shouldOpenModal) {
            $("#addUserModal").css("display", "flex");
        }

        $("#addButton").click(function () {
            $("#addUserModal").css("display", "flex");
        });

        $(".modal-cancel").click(function () {
            $("#addUserModal").css("display", "none");
        });
    });

    $(document).ready(function () {
        $("#btnLogout").click(function () {
            $.ajax({
                url: "/Login/LogOut",
                success: function (response) {
                    window.location.href = response.redirectUrl;
                },
            });
        });
    });

    let webIdContact = "";
    let typingTimeout;

    function selecionarContato(to, myNumberId) {
        $.ajax({
            url: '/Chat/ContatoSelecionado',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ WebId: to, MyNumberId: myNumberId }),
            success: function (html) {
                webIdContact = to;
                $('.chat-container').html(html);
            }
        });
    }

    // SignalR
        const contacts = @Html.Raw(Json.Serialize(Model.Contacts));

    let from = @Html.Raw(Json.Serialize(Model.UserLogged.Name));
    from = from + ";" + @Html.Raw(Json.Serialize(Model.UserLogged.WebId));

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub?userName=" + encodeURIComponent(from))
        .withAutomaticReconnect()
        .build();

    connection.onreconnecting((error) => {
        console.warn("Tentando reconectar...", error);
    });

    connection.onreconnected((connectionId) => {
        console.log("Reconectado com sucesso!", connectionId);
    });

    connection.start()
        .then(function () {
            $(document).on('input', '#chatInput', function () {
                const to = webIdContact;

                connection.invoke("Typing", from, to).catch(function (err) {
                    return console.error(err.toString());
                });
            });

        $(document).on('click', '#btnSendMessage', function() {
                const to = webIdContact;
                const message = $('#chatInput').val().trim();
                if (message === "") {
                        return;
                }

                connection.invoke("SendMessage", from, to, message).catch(function (err) {
                    return console.error(err.toString());
                    });

                const chatMessages = $("#chatMessages");
                    chatMessages.append("<div class='message sent'>" + message + "</div>");
                chatMessages.scrollTop(chatMessages[0].scrollHeight);
                $("#chatInput").val("");

                SendMessageToController(to, message);
                });

                connection.on("ReceiveMessage", function (to, message) {

                    if (to == webIdContact)
                    {
                        const chatMessages = $("#chatMessages");
                        chatMessages.append("<div class='message received'>" + message + "</div>");
                        chatMessages.scrollTop(chatMessages[0].scrollHeight);
                        $("#chatInput").val("");
                    }
                    else
                    {
                         const contato = contacts.find(c => c.WebId === to);

                         if (!contato)
                         {
                             $.ajax({
                                 url: '/Chat/ContatoDesconhecido',
                                 type: 'GET',
                                 success: function (html) {
                                     $('.conversas').html(html);
                                 }
                             });
                         }
                    }
                });

                connection.on("UserTyping", function(to) {
                    $("#typing-indicator-"+ to).text("digitando...");

                    if (to == webIdContact)
                    {
                        $("#typing-chatArea-" + to).text("digitando...");
                    }
                    clearTimeout(typingTimeout);

                    typingTimeout = setTimeout(function() {
                        $("#typing-indicator-"+to).text("");
                        $("#typing-chatArea-" + to).text("");
                      }, 2000);
                });



            })
            .catch(function (err) {
                return console.error(err.toString());
            });


        function SendMessageToController(to, message)
        {
            var fromWebId = from.split(";")[1];
            const datetime = new Date().toISOString();

             $.ajax({
               url: '/Chat/SalvarMensagem',
               type: 'POST',
               data: { WIDFrom: fromWebId, WIDTo: to, message : message, datetime : datetime},
               success: function (html) {
                   console.log(html);
               }
           });
        }
</script>
